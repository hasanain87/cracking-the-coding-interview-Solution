import java.util.ArrayList;
import java.util.List;

import javafx.animation.PathTransition;
import javafx.animation.PathTransition.OrientationType;
import javafx.animation.StrokeTransition;
import javafx.animation.Timeline;
import javafx.application.Application;
import javafx.application.Platform;
import javafx.beans.InvalidationListener;
import javafx.beans.Observable;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.geometry.Insets;
import javafx.scene.Node;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Slider;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.FlowPane;
import javafx.scene.layout.HBox;
import javafx.scene.layout.Region;
import javafx.scene.layout.StackPane;
import javafx.scene.media.Media;
import javafx.scene.media.MediaPlayer;

// This program work perfectly with .MP3


public class list  extends Application{

	static Text text;
		
	static int i=1;
	static   public MediaPlayer mp []= new MediaPlayer[4];
	
	
	static   void playSound(int a){
		

	  mp[a]= new MediaPlayer(new Media("file:///Users/hasanainalsabonchi/Documents/workspace/Link/src/h/"+a+".mp3"));
  
	 switch(a){
	 
	case 1:  
	
	mp[a].play();  break;
	
	case 2: mp[i].stop(); 
	mp[a].play();  break;
	
	case 3:mp[i].stop(); 
	    mp[a].play();  break;
	
	case 4: mp[i].stop(); 
	mp[a].play();  break;
	}	
	}
	

	public static synchronized void main(String[] args) {
		// TODO Auto-generated method stub
		
		
		Application.launch(args);

	}

	@Override
	public void start(Stage primaryStage) throws Exception {
		// TODO Auto-generated method stub
		
		//Image image = new Image("h4.jpeg");
		
		
		 StackPane pane = new StackPane();
				// Circle  
		  Circle  circle = new Circle(200,200,150, Color.CYAN);
		  circle.setStroke(Color.ORANGE);
		  
		  // circle Animation
		  PathTransition  pathTransition= new PathTransition();
		     
		     pathTransition.setDuration(Duration.millis(10000));
		     pathTransition.setNode(text);
		     pathTransition.setPath(circle);
		     pathTransition.setOrientation(OrientationType.ORTHOGONAL_TO_TANGENT);
		     pathTransition.setCycleCount(Timeline.INDEFINITE);
		     pathTransition.setAutoReverse(true);
		 
		     pathTransition.play();
		  
		
		  //Text  ADD CIRCLE AND TEXT TO THE PANE
		   text = new Text("This is Done By Hasanain Al Sabonchi \n\t\t     MP3 player");
		  pane.getChildren().addAll(circle,text);
		  
		  
		  
		  StrokeTransition st = new StrokeTransition(Duration.millis(7000), text, Color.CRIMSON, Color.LIME);
		     st.setCycleCount(4);
		     st.setAutoReverse(true);
		     st.play();
		 
	
	  
           //Volume Slider
		     
	      Slider volumeSlider = new Slider();
	     // volumeSlider.getStylesheets().add("file:///Users/hasanainalsabonchi/Documents/workspace/Link/bin/h.css");
	      volumeSlider.autosize();
	      volumeSlider.setShowTickMarks(true);
	         
	          
		// pane.getChildren().add(new ImageView(image));
	        
	        
		// play Button
		Button btOK = new Button("Play");
		
		Button bt = new Button("Stop");
		bt.setMaxWidth(Double.MAX_VALUE);
		Button btNext = new Button("Next");
	
	//Button btPause = new Button("Pause");
   	Button rewindButton = new Button("<<");
	   btOK.setMaxWidth(Double.MAX_VALUE);	
       btOK.setMaxHeight(40.0);
    

       bt.setMaxWidth(Double.MAX_VALUE);	
       bt.setMaxHeight(40.0);		       
       btNext.setMaxWidth(Double.MAX_VALUE);	
       btNext.setMaxHeight(40.0);
     
       
		//  pane  holds Button
		HBox hBox = new HBox(30);
		//hBox.setStyle("-fx-background-color: YELLOW");
		hBox.setPadding(new Insets(11.5, 12.5, 13.5, 14.5));
		hBox.setMaxHeight(100);
		hBox.getChildren().add(btOK);
		hBox.getChildren().add(bt);
		hBox.getChildren().add(btNext);
		//hBox.getChildren().add(btPause);
		
		hBox.getChildren().add( volumeSlider);
		
		
		BorderPane pane2 = new BorderPane();
		//pane2.setStyle("-fx-background-color:YELLOW");
		 pane2.setTop(pane);
		 pane2.setCenter(hBox);
		 
		 
		 
		 btOK.setOnAction(e -> 	{
				 
		
				 if ( btOK.getText().equals("Play")) {
					  list.playSound(i);
					 btOK.setText("||");
					 } 
				 else {
					mp[i].pause();
					 btOK. setText("Play");
				 }
			  });
		
		 
		 
		 

		rewindButton.setOnAction(e -> mp[i].seek(Duration.ZERO));
		 
		 bt.setOnAction(new EventHandler<ActionEvent>() {
			 public synchronized void handle(ActionEvent e) {
		 System.out.println("stop");
		 
		
		 mp[i].stop();
			 }
			  });
		 

		 btNext.setOnAction(new EventHandler<ActionEvent>() {
		 public  void handle(ActionEvent e) {
		 System.out.println("next");
		 
	   try{
	  boolean playing = mp[i].getStatus().equals(Status.PLAYING);
			if(playing == true){
				
				mp[i].stop();
			 
			}
			
			 i=i+1;
			 System.out.println(i);
			;
			  for(int j=0;j<i;j++)
			mp[i]= new MediaPlayer(new Media("file:///Users/hasanainalsabonchi/Documents/workspace/Link/src/h/"+i+".mp3"));
				mp[i].play();	
	  }
			catch (Exception ex) {
		System.out.println("End Of MP3");
				
			}
		
			}	
			  });
		 
		 
		 
		 
     /*btPause.setOnAction(new EventHandler<ActionEvent>() {
			 public  void handle(ActionEvent e) {
			 System.out.println("pause");
			 
			 boolean playing2 = mp[i].getStatus().equals(Status.PLAYING);
				if(playing2 == true){
		        mp[i].pause();
				}
			 }
			 
		 });*/


                   //  volume slider

       
    volumeSlider.valueProperty().addListener(new InvalidationListener() {
    public void invalidated(Observable ov) {
        if (volumeSlider.isValueChanging()) {
        	 mp[i].setVolume(volumeSlider.getValue()/100.0);
         
        }
    }
});


   
		 //pane.setRotate(45);
		Scene scene = new Scene(pane2, 450 ,450);
		scene.getStylesheets().add("file:///Users/hasanainalsabonchi/Documents/workspace/Link/bin/h.css");
		 primaryStage.setTitle("MediaPlayer"); // Set the stage title
		 primaryStage.setScene(scene); // Place the scene in the stage
			 primaryStage.show(); // Display the stage
			
			}

		
	
		
	}

//This is CSS file  , Save It with your resouces
//
.root{
	    
	    -fx-background:  #CCFF99;
	     -fx-text-fill: rgb(49, 89, 23);
	}
	
	.button{
	    -fx-text-fill: rgb(49, 89, 23);
	    -fx-border-color: rgb(49, 89, 23);
	    -fx-border-radius: 5;
	    -fx-padding: 3 6 6 6;
	}
	
	.borders{
	    -fx-border-color: rgb(103, 100, 78);
	    -fx-border-style: dotted;
	    -fx-border-width: 1.5;
	    -fx-border-insets: -5;
	}
	
	sidebar {
	  -fx-background:  cornsilk;
	  -fx-padding: 10 10 10 10;
	  -fx-background-insets: 0 10 0 0;
	  -fx-border-insets: 0 10 0 0;
	  -fx-background-color: linear-gradient(to bottom, derive(lavenderblush, -10%), derive(mistyrose, 10%));
	  -fx-border-color: derive(mistyrose, -20%);
	  -fx-border-width: 4;
	}
//
